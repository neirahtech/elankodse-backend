version: '3.8'

services:
  backend:
    build: .
    container_name: elankodse-backend
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      - NODE_ENV=production
      - PORT=8084
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - PRODUCTION_URL=${PRODUCTION_URL}
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - elankodse-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8084/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: elankodse-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/ssl:/etc/nginx/ssl:ro
      - ./backend/logs/nginx:/var/log/nginx
    depends_on:
      - backend
    networks:
      - elankodse-network

networks:
  elankodse-network:
    driver: bridge